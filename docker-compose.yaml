services:
  myapp:
    image: myapp:1
    container_name: myapp_compose_container
    ports:
      - "8080:5000"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://myapp_user:myapp_password@postgres:5432/myapp_db
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000/books')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:17
    container_name: postgres_container
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: myapp_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myapp_user -d myapp_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt

volumes:
  postgres_data: 